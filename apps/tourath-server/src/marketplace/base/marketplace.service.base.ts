/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, Marketplace as PrismaMarketplace } from "@prisma/client";

export class MarketplaceServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.MarketplaceCountArgs, "select">
  ): Promise<number> {
    return this.prisma.marketplace.count(args);
  }

  async marketplaces(
    args: Prisma.MarketplaceFindManyArgs
  ): Promise<PrismaMarketplace[]> {
    return this.prisma.marketplace.findMany(args);
  }
  async marketplace(
    args: Prisma.MarketplaceFindUniqueArgs
  ): Promise<PrismaMarketplace | null> {
    return this.prisma.marketplace.findUnique(args);
  }
  async createMarketplace(
    args: Prisma.MarketplaceCreateArgs
  ): Promise<PrismaMarketplace> {
    return this.prisma.marketplace.create(args);
  }
  async updateMarketplace(
    args: Prisma.MarketplaceUpdateArgs
  ): Promise<PrismaMarketplace> {
    return this.prisma.marketplace.update(args);
  }
  async deleteMarketplace(
    args: Prisma.MarketplaceDeleteArgs
  ): Promise<PrismaMarketplace> {
    return this.prisma.marketplace.delete(args);
  }
}
