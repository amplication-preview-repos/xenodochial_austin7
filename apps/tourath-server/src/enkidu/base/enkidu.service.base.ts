/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, Enkidu as PrismaEnkidu } from "@prisma/client";

export class EnkiduServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(args: Omit<Prisma.EnkiduCountArgs, "select">): Promise<number> {
    return this.prisma.enkidu.count(args);
  }

  async enkidus(args: Prisma.EnkiduFindManyArgs): Promise<PrismaEnkidu[]> {
    return this.prisma.enkidu.findMany(args);
  }
  async enkidu(
    args: Prisma.EnkiduFindUniqueArgs
  ): Promise<PrismaEnkidu | null> {
    return this.prisma.enkidu.findUnique(args);
  }
  async createEnkidu(args: Prisma.EnkiduCreateArgs): Promise<PrismaEnkidu> {
    return this.prisma.enkidu.create(args);
  }
  async updateEnkidu(args: Prisma.EnkiduUpdateArgs): Promise<PrismaEnkidu> {
    return this.prisma.enkidu.update(args);
  }
  async deleteEnkidu(args: Prisma.EnkiduDeleteArgs): Promise<PrismaEnkidu> {
    return this.prisma.enkidu.delete(args);
  }
}
